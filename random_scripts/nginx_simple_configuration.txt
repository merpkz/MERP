# main configs;
user nginx;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

# not sure about these:
events {
        worker_connections 768;
        multi_accept on;
}

http {
        sendfile on;
        tcp_nopush on;
        types_hash_max_size 2048;
        server_tokens off;

        server_names_hash_bucket_size 64;
        server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging Settings
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # gzip Settings
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}

# includable ssl configs:
ssl_session_timeout 5m;
ssl_session_cache shared:MozSSL:10m;
ssl_session_tickets off;

# DHE is slow?
# curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
# ssl_dhparam /etc/nginx/dhparam;

# intermediate configuration
ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
ssl_ciphers TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES256-SHA:AES128-SHA:!DSS:!DSA:!ECDSA:!EDH:!3DES;
ssl_prefer_server_ciphers on;

# OCSP stapling
ssl_stapling on;
ssl_stapling_verify on;
ssl_trusted_certificate /path/to/some/ca/idk;

# replace with the IP address of your resolver
resolver 1.1.1.1 8.8.8.8;
resolver_timeout 5s;

add_header Strict-Transport-Security "max-age=15552000";

# example sites-available:

server {
        listen 80;
        server_name first_server_name second_server_name;
        charset utf8;

        root /var/www/html/

        return 301 https://$host$request_uri;
}

server {
        listen 443 ssl http2;
        server_name first_server_name second_server_name;
        charset utf8;

        root /var/www/html/

        location ~ /\.git {
                deny all;
        }

        location / {
                try_files $uri $uri/ =404;
        }

        include /etc/nginx/ssl_includes.conf;
        ssl_certificate /path/to/chain.pem;
        ssl_certificate_key /path/to/key;
}
